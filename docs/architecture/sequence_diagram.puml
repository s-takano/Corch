@startuml Sequence Diagram - SharePoint Change Processing
!define AZURE_COLOR #0078D4
!define FUNCTION_COLOR #FF6600
!define SERVICE_COLOR #00AA44

title SharePoint Change Processing - Message Flow

actor "SharePoint" as SP
participant "SharePoint\nWebhook\nCallback" as Webhook FUNCTION_COLOR
participant "Default\nWebhook\nProcessor" as Processor SERVICE_COLOR
participant "Azure\nService Bus" as SB AZURE_COLOR
participant "Process\nSharePoint\nChange" as ProcessFunc FUNCTION_COLOR
participant "SharePoint\nChange\nHandler" as Handler SERVICE_COLOR
participant "Graph\nFacade" as Graph SERVICE_COLOR
participant "Excel\nParser" as Parser SERVICE_COLOR
participant "Database\nWriter" as DB SERVICE_COLOR
participant "Blob\nStorage" as Blob AZURE_COLOR

== Webhook Reception ==
SP -> Webhook: POST /api/SharePointWebhookCallback
activate Webhook

alt Handshake Request
    Webhook -> Processor: TryHandshake(req)
    activate Processor
    Processor -> Webhook: HttpResponseData (validation token)
    deactivate Processor
    Webhook -> SP: HTTP 200 + validation token
else Change Notification
    Webhook -> Processor: BuildEnqueueAsync(req)
    activate Processor
    Processor -> Processor: Build notification payload
    Processor -> Webhook: (HttpResponseData, queueBody)
    deactivate Processor
    Webhook -> SB: Enqueue message
    Webhook -> SP: HTTP 200 (accepted)
end
deactivate Webhook

== Message Processing ==
SB -> ProcessFunc: ServiceBus Trigger (msg)
activate ProcessFunc

ProcessFunc -> Handler: EnsureGraphConnectionAsync()
activate Handler
Handler -> Graph: TestConnectionAsync()
activate Graph
Graph -> Handler: ConnectionResult
deactivate Graph

alt Connection Failed
    Handler -> ProcessFunc: false
    deactivate Handler
    ProcessFunc -> Blob: Save failed message
    ProcessFunc -> ProcessFunc: Log error & return
else Connection Success
    Handler -> ProcessFunc: true
    deactivate Handler
    
    ProcessFunc -> ProcessFunc: Deserialize<NotificationEnvelope>(msg)
    
    loop For each ChangeNotification
        ProcessFunc -> Handler: HandleAsync(change)
        activate Handler
        
        Handler -> Handler: Begin Transaction & Extract itemId
        Handler -> Graph: GetListItemAsync() & GetDriveItemAsync()
        activate Graph
        Graph -> Handler: ListItem & DriveItem
        deactivate Graph
        
        opt ProcessFlag == "Yes"
            Handler -> Graph: DownloadAsync(driveId, itemId)
            activate Graph
            Graph -> Handler: Excel file stream
            deactivate Graph
            
            Handler -> Parser: Parse(bytes)
            activate Parser
            Parser -> Handler: DataSet or error
            deactivate Parser
            
            opt Parse Success
                Handler -> DB: WriteAsync(dataSet)
                activate DB
                DB -> Handler: Success
                deactivate DB
                Handler -> Handler: Commit Transaction
            end
        end
        deactivate Handler
    end
end

deactivate ProcessFunc

== Error Handling ==
alt Unhandled Exception
    ProcessFunc -> Blob: Save failed message
    ProcessFunc -> ProcessFunc: Log error
    ProcessFunc -> SB: Throw (trigger retry)
end

@enduml