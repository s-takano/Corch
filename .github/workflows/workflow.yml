# .github/workflows/func-linux-iso.yml
name: Build & deploy Azure Function

on:
  push:
    branches: [master] 
  workflow_dispatch:

permissions:
  id-token: write            
  contents: read

env:
  FUNC_APP: 'corch-edges'            
  DOTNET_VERSION: '8.0.x'

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER:     postgres
          POSTGRES_PASSWORD: postgres   
        ports: [5432:5432]
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      # ---------- Build ----------
      - run: dotnet restore
      - run: dotnet build -c Release --no-restore
      - run: dotnet publish -c Release -o ./publish

      - name: Run tests
        env:
          ConnectionStrings__TestDatabase: Host=localhost;Database=postgres;Username=postgres;Password=postgres
          # ServiceBus__Connection: ${{ secrets.SERVICEBUS_CONNECTION_STRING }}
        run: |
          dotnet test -c Release --no-build --filter "Category=Contract"
          dotnet test -c Release --no-build --filter "Category=Unit"      
          dotnet test -c Release --no-build --filter "Category=Entity"
          dotnet test -c Release --no-build --filter "Category=Functional"
          # dotnet test -c Release --no-build --filter "Category=Integration&Require=PostgreSQL"
          dotnet test -c Release --no-build --filter "Category=EndToEnd"
          
      # ---------- Azure auth via OIDC ----------
      - uses: azure/login@v2
        with:
          client-id:        ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id:        ${{ secrets.AZURE_TENANT_ID }}
          subscription-id:  ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      # ---------- Deploy ----------
      - uses: Azure/functions-action@v1
        with:
          app-name:   corch-edges
          package:    ./publish
